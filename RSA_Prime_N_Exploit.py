from sympy import mod_inverse



def number_to_text(number):
    """
    Convert a number to text by interpreting its bytes (ASCII values).
    Assumes that the number represents ASCII-encoded characters.
    
    Args:
        number (int): The decrypted plaintext as an integer.

    Returns:
        str: The corresponding text.
    """
    # Convert the number to a byte string, then decode it as text
    byte_array = number.to_bytes((number.bit_length() + 7) // 8, 'big')
    try:
        return byte_array.decode('utf-8')
    except UnicodeDecodeError:
        return f"Cannot decode the byte sequence: {byte_array}"


def decrypt_rsa_prime_modulus(n, e, ciphertext):
    """
    Decrypt an RSA ciphertext when the modulus n is prime.

    Args:
        n (int): The prime modulus.
        e (int): The public exponent.
        ciphertext (int): The encrypted message (ciphertext).

    Returns:
        int: The decrypted plaintext.
    """
    # Step 1: Compute λ(n) = n - 1 (since n is prime)
    lambda_n = n - 1

    # Step 2: Compute the private exponent d = e^(-1) mod λ(n)
    d = mod_inverse(e, lambda_n)

    # Step 3: Decrypt the ciphertext: plaintext = ciphertext^d mod n
    plaintext = pow(ciphertext, d, n)

    return plaintext

# Example usage:
if __name__ == "__main__":
    # Public key components (n is prime)
    n = 140201392884586771007818607693920882368513499909003894334524470720195123091500098454948726661739521396412845719884401641161408870343324523595569921975089129869550839676622290444908311664885251602296479281667512321171130176289107994602669926237464057657364163888576071061804283474057094281107358584567651488141  # Prime modulus
    e = 3   # Public exponent

    # Ciphertext to decrypt
    ciphertext = 132772573398485357115349846637417686629689409745059625141254448231767898782879550394976694856167576138214785853425825220886806952416741455971761162910085605818252134957935063091531626224080770951923644157769533498576924229862619727018103651380603659469124975531175454397767683105543273944742797016857668909502

    # Decrypt the message
    plaintext = decrypt_rsa_prime_modulus(n, e, ciphertext)
    print(f"Decrypted plaintext: {plaintext}")

    text = number_to_text(plaintext)
    print(f"Decrypted plaintext (text): {text}")